                ;********************************************************************************************
                ;
                ; LRDBIOS.ASM - S180918
                ; CP/M 3.0 CPMLDR BIOS FOR THE Z80-MBC2 (HW ref. A040618)
                ;
                ; Required IOS S220718-R190918 (or newer revisions until otherwise stated)
                ;
                ; NOTE: Use the RMAC.COM relocatable assembler
                ;
                ;
                ;
                ;********************************************************************************************
                
                
 FFFF =         TRUE		EQU	-1		    ; DEFINE LOGICAL VALUES:
 0000 =         FALSE		EQU	NOT TRUE
                
 0000 =         BANKED		EQU	FALSE		; <------ BANKED/NON-BANKED SWITCH 
                					
 0007 =         BELL		EQU	07H
 0000 =         eos         EQU 00H         ; End of string
 000D =         CR		    EQU	0DH
 000A =         LF		    EQU	0AH
                
                ; --------------------------------------------------------------------------------
                ;
                ; Z80-MBC2 IOS equates
                ;
                ; --------------------------------------------------------------------------------
                
 0000 =         EXC$WR$OPCD  EQU    000H      ; Address of the EXECUTE WRITE OPCODE write port
 0000 =         EXC$RD$OPCD  EQU    000H      ; Address of the EXECUTE READ OPCODE read port
 0001 =         STO$OPCD     EQU    001H      ; Address of the STORE OPCODE write port
 0001 =         SERIAL$RX    EQU    001H      ; Address of the SERIAL RX read port
 0001 =         SERTX$OPC    EQU    001H      ; SERIAL TX opcode
 0009 =         SELDISK$OPC  EQU    009H      ; SELDISK opcode
 000A =         SELTRCK$OPC  EQU    00AH      ; SELTRACK opcode
 000B =         SELSECT$OPC  EQU    00BH      ; SELSECT opcode
 000C =         WRTSECT$OPC  EQU    00CH      ; WRITESECT opcode
 0083 =         SYSFLAG$OPC  EQU    083H      ; SYSFLAG opcode
 0084 =         DATETIM$OPC  EQU    084H      ; DATETIME opcode
 0085 =         ERRDSK$OPC   EQU    085H      ; ERRDISK opcode
 0086 =         RDSECT$OPC   EQU    086H      ; READSECT opcode
 0087 =         SDMOUNT$OPC  EQU    087H      ; SDMOUNT opcode
                
                ; INCLUDE CP/M 3.0 MACRO LIBRARY:
                
                	MACLIB CPM3
                	MACLIB	Z80
                
                ;--------------------------------------------------------------------------
                ;	                    CODE BEGINS HERE:
                ;--------------------------------------------------------------------------	
                
 0000 C3A900    		JMP	BOOT		;<----- INITIAL ENTRY ON COLD START
 0003 C3A800    		JMP	WBOOT		;REENTRY ON PROGRAM EXIT, WARM START
 0006 C36300    		JMP	CONST		;RETURN CONSOLE INPUT STATUS
 0009 C37200    		JMP	CONIN		;RETURN CONSOLE INPUT CHARACTER
 000C C37800    		JMP	CONOUT		;<------------ SEND CONSOLE OUTPUT CHARACTER
 000F C36900    		JMP	LIST		;SEND LIST OUTPUT CHARACTER
 0012 C36A00    		JMP	AUXOUT		;SEND AUXILLIARY OUTPUT CHARACTER
 0015 C37500    		JMP	AUXIN		;RETURN AUXILLIARY INPUT CHARACTER
 0018 C38C00    		JMP	HOME		;SET DISKS TO LOGICAL HOME
 001B C38800    		JMP	SELDSK		;SELECT DISK DRIVE RETURN DISK PARAMETER INFO
 001E C38F00    		JMP	SETTRK		;SET DISK TRACK
 0021 C39400    		JMP	SETSEC		;SET DISK SECTOR
 0024 C39900    		JMP	SETDMA		;SET DISK I/O MEMORY ADDRESS
 0027 C3B000    		JMP	READ		;<----------- READ PHYSICAL BLOCK(S)
 002A C3A600    		JMP	WRITE		;WRITE PHYSICAL BLOCK(S)
 002D C36400    		JMP	LISTST		;RETURN LIST DEVICE STATUS
 0030 C39E00    		JMP	SECTRN		;TRANSLATE LOGICAL TO PHYSICAL SECTOR
 0033 C38000    		JMP	CONOST		;RETURN CONSOLE OUTPUT STATUS
 0036 C36500    		JMP	AUXIST		;RETURN AUXILLIARY INPUT STATUS
 0039 C36600    		JMP	AUXOST		;RETURN AUXILLIARY OUTPUT STATUS
 003C C36B00    		JMP	DEVTBL		;RETURN ADDRESS OF DEVICE DEFINITION TABLE
 003F C36C00    		JMP	?CINIT		;CHANGE BAUD RATE OF DEVICE
 0042 C3A100    		JMP	GETDRV		;RETURN ADDRESS OF DISK DRIVE TABLE
 0045 C36D00    		JMP	MULTIO		;SET MULTIPLE RECORD COUNT FOR DISK I/O
 0048 C36700    		JMP	FLUSH		;FLUSH BIOS MAINTAINED DISK CACHING
 004B C38300    		JMP	?MOVE		;BLOCK MOVE MEMORY TO MEMORY
 004E C36E00    		JMP	?TIME		;SIGNAL TIME AND DATE OPERATION
 0051 C36F00    		JMP	BNKSEL		;SEL BANK FOR CODE EXECUTION AND DEFAULT DMA
 0054 C37000    		JMP	SETBNK		;SELECT DIFFERENT BANK FOR DISK I/O DMA OPS.
 0057 C37100    		JMP	?XMOVE		;SET SOURCE AND DEST. BANKS FOR ONE OPERATION
 005A C30000    		JMP	0		    ;RESERVED FOR FUTURE EXPANSION
 005D C30000    		JMP	0		    ;     DITTO
 0060 C30000    		JMP	0		    ;     DITTO
                
                
                CONST:		
 0063 C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                LISTST:		
 0064 C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                AUXIST:		
 0065 C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                AUXOST:		
 0066 C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                FLUSH:		
 0067 AF                XRA	A		; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
 0068 C9        		RET			; RETURN A FALSE STATUS
                
                LIST:		
 0069 C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                AUXOUT:		
 006A C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                DEVTBL:		
 006B C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                ?CINIT:		
 006C C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                MULTIO:		
 006D C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                ?TIME:		
 006E C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                BNKSEL:		
 006F C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                SETBNK:		
 0070 C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                ?XMOVE:		
 0071 C9                RET			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                CONIN:		
 0072 3E1A              MVI   A,'Z'-40H		; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
 0074 C9        		RET
                
                AUXIN:		
 0075 3E1A              MVI   A,'Z'-40H		; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
 0077 C9        		RET
                
                CONOUT:
                        ; Write Console Character out. Output char is in C
 0078 3E01              mvi     a, SERTX$OPC    ; A = SERIAL TX opcode
 007A D301              out     STO$OPCD        ; Write the opcode
 007C 79                mov     a, c
 007D D300              out     EXC$WR$OPCD     ; Send A to serial Tx
 007F C9                ret
                
                CONOST:
                        ; Return Output Status of Console. Return A=00H if not ready, A=0FFH if ready
 0080 3EFF              mvi     a, 0FFH         ; Always ready
 0082 C9                ret
                
                ?MOVE:		
 0083 EB                XCHG
                		LDIR
 0084+EDB0      	DB	0EDH,0B0H
 0086 EB        		XCHG
 0087 C9        		RET
                
                SELDSK:		
 0088 215801            LXI	H,DPH0		    ; RETURN DPH ADDRESS FOR DRIVE A:
 008B C9        		RET
                
                HOME:		
 008C 010000            LXI	B,0		        ; HOME SELECTED DRIVE -- TREAT AS SETTRK(0):
                
                SETTRK:		
                        SBCD	@TRK		; ROUTINE SETS TRACK TO ACCESS ON NEXT READ
 008F+ED43      	DB	0EDH,43H
 0091+2801      	DW	@TRK
 0093 C9        		RET
                	
                SETSEC:		
                        SBCD	@SECT		; ROUTINE SETS SECTOR TO ACCESS ON NEXT READ
 0094+ED43      	DB	0EDH,43H
 0096+2C01      	DW	@SECT
 0098 C9        		RET
                
                SETDMA:		
                        SBCD	@DMA		; ROUTINE SETS DISK MEMORY ADDRESS FOR READ
 0099+ED43      	DB	0EDH,43H
 009B+2A01      	DW	@DMA
 009D C9        		RET
                
                SECTRN:		
 009E 69                MOV	L,C		        ; NO TRANSLATION FOR HDISK
 009F 60        		MOV	H,B
 00A0 C9        		RET
                
                GETDRV:		
 00A1 212E01            LXI	H,@DTBL		    ; RETURN ADDRESS OF DISK DRIVE TABLE:
 00A4 C9        		RET
                
                DCBINIT:	
 00A5 C9                RET			        ; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                
                WRITE:		
 00A6 AF                XRA	A		        ; RETURN GOOD RESULT CODE
 00A7 C9        		RET
                
                WBOOT:		
 00A8 C9                RET			        ; WARM BOOT IS NOT USED IN LOADER BIOS
                
                ;--------------------------------------------------------------------------
                ;                                  BOOT
                ;                   ROUTINE DOES COLD BOOT INITIALIZATION:
                ;--------------------------------------------------------------------------
                
                
                BOOT:
                		;IF	BANKED
                	
                ;=========================================================================================	
                ; LETS RELOCATE OUR MEMORY IMAGE UP TO THE 10000H-17FFFH MEMORY
                ; REGION FOR EXECUTION -- CP/M 3.0 BANK 0 WILL BE THAT EXTENDED
                ; ADDRESS REGION AND THE TPA WILL BE PART OF THE NORMAL LOWER 64K
                ;=========================================================================================
                	
                		;MVI	A,11H		;<--- Map to (0001xxx1) + BIT 0 IS FOR EPROM DISABLE 
                		;OUT	MPURR1		;THIS RELOCATES THE UPPER WINDOW TO 10000H-13FFFH
                		;LXI	B,2000H		;WE WILL MOVE 8K BYTES, (should be more than enough)
                		;LXI	H,0		;STARTING FROM 0000H
                		;LXI	D,4000H		;UP TO 3FFFH TO 10000H
                		;LDIR			;Z-80 BLOCK MOVE
                		;MVI	A,11H		;Back to the 10000H RAM area
                		;OUT	MPURR0		;SWITCH OURSELVES IN TO THAT WINDOW
                		;ADI	4		;AND MAKE THE UPPER WINDOW CONTIGUOUS
                		;OUT	MPURR1		;THE Z80 ADDRESS LINES ARE NOW, (Unknown to the Z80), 
                					;reading (0-7FFFH) to 10000H-17FFFH. Addresses 8000H-FFFFH are unchanged
                					;At this point we are in the > 64K window (unknown to the Z80).
                ;===========================================================================================
                
                		;ENDIF
                        
 00A9 210401            lxi     h, BiosMsg      ; Print a message
 00AC CDF600            call    puts
 00AF C9        		RET
                
                ;--------------------------------------------------------------------------------
                ;	   HARD DISK READ A SECTOR AT @TRK, @SECT TO Address at @DMA
                ;      Return A=00H if no Error, A=01H if Non-recov Err
                ;-------------------------------------------------------------------------------- 
                
                READ:
 00B0 C5                push     b
 00B1 E5                push     h
                        ;
                        ; Select host disk 0
 00B2 3AF500            lda      lastDsk            ; A = last disk number
 00B5 B7                ora      a                  ; Set Z flag. Last disk = 0?
                        jrz      setTrack           ; Yes, jump to track selection
 00B6+28        	DB	28H
 00B7+0A        	DB	SETTRACK-$-1
 00B8 3E09              mvi      a, SELDISK$OPC     ; No, select SELDISK opcode (IOS)
 00BA D301              out      STO$OPCD
 00BC AF                xra      a                  ; Select the disk 0
 00BD D300              out      EXC$WR$OPCD
 00BF 32F500            sta      lastDsk            ; Update last disk number        
                        ;
                        ; Select @TRK host track
                setTrack:
 00C2 3E0A              mvi      a, SELTRCK$OPC     ; Select SELTRACK opcode (IOS)
 00C4 D301              out      STO$OPCD
 00C6 3A2801            lda      @TRK               ; Select the track number LSB
 00C9 D300              out      EXC$WR$OPCD
 00CB 3A2901            lda      @TRK + 1           ; Select the track number MSB
 00CE D300              out      EXC$WR$OPCD
                        ;
                        ; Select @SECT host sector
 00D0 3E0B              mvi      a, SELSECT$OPC     ; Select SELSECT opcode (IOS)
 00D2 D301              out      STO$OPCD
 00D4 3A2C01            lda      @SECT              ; Select the sector number (LSB only)
 00D7 D300              out      EXC$WR$OPCD
                        ;
                        ; Read current host sector (512 byte) to DMA
 00D9 0E00              mvi     c, EXC$RD$OPCD      ; Set the EXECUTE READ OPCODE port into C
 00DB 2A2A01            lhld    @DMA                ; HL = DMA address
 00DE 3E86              mvi     a, RDSECT$OPC       ; Select READSECT opcode (IOS)
 00E0 D301              out     STO$OPCD
 00E2 0600              mvi     b, 0                ; Byte counter = 256
                        inir                        ; Read 256 byte to hstbuf
 00E4+EDB2      	DB	0EDH,0B2H
                        inir                        ; Read 256 byte to hstbuf
 00E6+EDB2      	DB	0EDH,0B2H
                        ;
                        ; Check for errors
 00E8 3E85              mvi     a, ERRDSK$OPC      ; Select ERRDISK opcode (IOS)
 00EA D301              out     STO$OPCD
 00EC DB00              in      EXC$RD$OPCD         ; Read error code into A
 00EE B7                ora     a                   ; Set Z flag
 00EF E1                pop     h
 00F0 C1                pop     b
 00F1 C8                rz                          ; Return with A = 0 (no error)
 00F2 3E01              mvi     a, 1                ; Set error code
 00F4 C9                ret                         ; Return with A = 1 (read error)
                    
 00F5 FF        lastDsk:     DB   0ffH              ; Last disk number (= ff after cold boot)
                
                
                ;=============================================================================
                ;                          Z80-MBC2 SUPPORT ROUTINES
                ;============================================================================= 
                
                ; ---------------------------------------------------------------------------- ;
                ;
                ; Send a string to the serial line, HL holds the pointer to the string.
                ; NOTE: Only A and HL are used
                ;
                ; ---------------------------------------------------------------------------- ;
                
                puts
 00F6 7E                mov      a, m           ; A = (HL) = current char to print
 00F7 FE00              cpi      eos            ; End of string reached?
 00F9 C8                rz                      ; Yes, return
 00FA 3E01              mvi      a, SERTX$OPC   ; A = SERIAL TX opcode
 00FC D301              out      STO$OPCD       ; Write the opcode
 00FE 7E                mov      a, m           ; A = (HL) = current char to print
 00FF D300              out      EXC$WR$OPCD    ; Print A
 0101 23                inx      h              ; Increment character pointer
                        jr       puts           ; Transmit next character
 0102+18        	DB	18H
 0103+F2        	DB	PUTS-$-1
                
                
                ; --------------------------------------------------------------------------- ;
                ;
                ; MESSAGES
                ;
                ; --------------------------------------------------------------------------- ;
                
 0104 0D0A0A5A38BiosMsg     db     CR, LF, LF, 'Z80-MBC2 CPMLDR BIOS - S180918', CR, LF, eos
                
 0128           @TRK:		DS	2		;2 BYTES FOR NEXT TRACK TO READ OR WRITE
 012A           @DMA:		DS	2		;2 BYTES FOR NEXT DMA ADDRESS
 012C           @SECT		DS	2		;2 BYTES FOR SECTOR
                
                
                ;--------------------------------------------------------
                ; BUILD CPM3 DPH'S ETC USING MACROS FOR HDISK AND BY HAND
                ;--------------------------------------------------------
                	
                	; DISK DRIVE TABLE:
 012E 5801000000@DTBL:	DW	DPH0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                
                	; DRIVE A DISK PARAMETER HEADER:
 014E A600      	DW	WRITE			;WRITE ROUTINE
 0150 B000      	DW	READ			;READ ROUTINE
 0152 8800      	DW	SELDSK			;LOGIN PROCEDURE
 0154 A500      	DW	DCBINIT			;DRIVE INITIALIZATION ROUTINE
 0156 00        	DB	0			    ;RELATIVE DRIVE 0 ON THIS CONTROLLER
 0157 00        	DB	0			    ;MEDIA TYPE ALWAYS KNOWN FOR HARD DISK
 0158 0000      DPH0:	DW	0			;TRANSLATION VECTOR
 015A 0000000000	DB	0,0,0,0,0,0,0,0,0
 0163 00        	DB	0			    ;MEDIA FLAG
 0164 7101      	DW	HD$DPB			;ADDRESS OF DISK PARAMETER BLOCK
 0166 8209      	DW	CSV			    ;CHECKSUM VECTOR
 0168 9A05      	DW	ALV			    ;ALLOCATION VECTOR
 016A 8201      	DW	DIRBCB			;DIRECTORY BUFFER CONTROL BLOCK
 016C 8E01      	DW	DATABCB			;DATA BUFFER CONTROL BLOCK
 016E FFFF      	DW	0FFFFH			;NO HASHING
 0170 00        	DB	0			    ;HASH BANK
                
                	; HARD DISK PARAMETER BLOCK:
                    ; Bytes per sector, num sec, num trk, block size, dir entries, res trk, HD flag
                     
                HD$DPB:	    DPB	    512,32,512,4096,512,1,8000H
 0171+8000      	DW	??0001		; 128 BYTE RECORDS PER TRACK
 0173+051F      	DB	??0002,??0003	; BLOCK SHIFT AND MASK
 0175+01        	DB	??0004		; EXTENT MASK
 0176+FB07      	DW	??0005		; MAXIMUM BLOCK NUMBER
 0178+FF01      	DW	??0006		; MAXIMUM DIRECTORY ENTRY NUMBER
 017A+F000      	DB	??0007,??0008	; ALLOC VECTOR FOR DIRECTORY
 017C+0080      	DW	??0009		; CHECKSUM SIZE
 017E+0100      	DW	1		; OFFSET FOR SYSTEM TRACKS
 0180+0203      	DB	??0010,??0011	; PHYSICAL SECTOR SIZE SHIFT
                
                	; DIRECTORY BUFFER CONTROL BLOCK:
                DIRBCB:
 0182 FF        	DB	0FFH			;DRIVE 0
 0183           	DS	3
 0186           	DS	1
 0187           	DS	1
 0188           	DS	2
 018A           	DS	2
 018C 9A01      	DW	DIRBUF			;POINTER TO DIRECTORY BUFFER
                
                	; DATA BUFFER CONTROL BLOCK:
                DATABCB:
 018E FF        	DB	0FFH			;DRIVE 0
 018F           	DS	3
 0192           	DS	1
 0193           	DS	1
 0194           	DS	2
 0196           	DS	2
 0198 9A03      	DW	DATABUF			;POINTER TO DATA BUFFER
                
                
                	; DIRECTORY BUFFER
 019A           DIRBUF:	DS	512			;1 PHYSICAL SECTOR
                
                	; DATA BUFFER:
 039A           DATABUF:DS	512			;1 PHYSICAL SECTOR
                
                	; DRIVE ALLOCATION VECTOR:
 059A           ALV:	 DS	1000		;SPACE FOR DOUBLE BIT ALLOCATION VECTORS
                CSV:					;NO CHECKSUM VECTOR REQUIRED FOR A HDISK
                
 0982           	END